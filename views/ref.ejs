<!DOCTYPE html>
<meta charset="utf-8">
<link href="https://fonts.googleapis.com/css?family=Comfortaa:400700" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Montserrat" rel="stylesheet">
<style>

html *
{
   font-family: Montserrat !important;
}
.hard-link {
  stroke:  #34495e ;
  stroke-width:2;
  stroke-dasharray: 5;
}
.soft-link{
  stroke:  #34495e ;
  stroke-width:2; 
  
}

.node text {
  pointer-events: none;
  font: 11px sans-serif;
  
}
/* Creates a small triangle extender for the tooltip */
.d3-tip:after {
  box-sizing: border-box;
  display: inline;
  font-size: 8px;
  width: 100%;
  line-height: 1;
  color: rgba(0, 0, 0, 0.8);
  content: "\25BC";
  position: absolute;
  text-align: center;
}

/* Style northward tooltips differently */
.d3-tip.n:after {
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;
}
.skill{
  font-weight: bold !important;
  font-size:12px !important;
}
.d3-tip {
  line-height: 1;
  font-weight: bold;
  padding: 8px;
  background: rgba(0, 0, 0, 0.8);
  color: white;
  border-radius: 20px;
  font-size:13px;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>
<script>

var width = 800,
    height = 500

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var force = d3.layout.force()
    .gravity(0.05)
    .distance(100)
    .charge(-100)
    .size([width, height]);

d3.json("http://"+location.host+"/getGformJson", function(error, json) {
  if (error) throw error;

  force
      .nodes(json.nodes)
      .links(json.links)
      .start();

var tip = d3.tip()
  .attr('class', 'd3-tip')
  .offset([-10, 0])
  .html(function(d) {
    if(d.type==2)
    return "<strong>Seat Number:</strong> <span style='color:white'>" + d.data.seat_number + "</span><br>"+"<strong>Contact:</strong> <span style='color:white'>" + d.data.contact + "</span><br>"+"<strong>College:</strong> <span style='color:white'>" + d.data.org + "</span>"
    else
      return "";
  })

  svg.call(tip);
  var link = svg.selectAll(".link")
      .data(json.links)
    .enter().append("line")
      .attr("class", function(d){
       if(d.value==1)
        return "hard-link";
        else
          return "soft-link";
        
      });

  var node = svg.selectAll(".node")
      .data(json.nodes)
    .enter().append("g")
      .attr("class", "node")
      .call(force.drag)
      .on('mouseover',tip.show)
      .on('mouseout',tip.hide)
      .on('click',function(d){
        //console.log(d.link)
        if(d.type==2)
          window.open('//'+d.data.link,'_blank')
      });

  node.append('circle')
      .attr('r',function(d){ 
        //console.log(d.data.size);
        return d.data.size})
      .attr('fill',function(d){if(d.type==1) return "#2874A6"; return "white"});

  node.append("image")
      .attr("xlink:href", function(d){
        if(d.type==2)
          return "https://github.com/favicon.ico"
        return "";})
      .attr("x", -8)
      .attr("y", -8)
      .attr("width", 16)
      .attr("height", 16);

  node.append("text")
      .attr("dx", function(d){
        if(d.type==1)
          return -d.data.size+2;
        else return 12;})
      .attr("dy", ".35em")
      .attr('fill','white')
      .attr('class',function(d){
        if(d.type==1)
          return "skill";
        else
          return "user";
      })
      .text(function(d) { return d.name });

  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
  });
});

</script>
